name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm test
        env:
          CI: true

      - name: Run backend linting
        working-directory: ./backend
        run: npm run lint

  test-frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test
        env:
          CI: true

      - name: Run frontend linting
        working-directory: ./frontend
        run: npm run lint

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  security-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd backend && npm audit --audit-level moderate
          cd ../frontend && npm audit --audit-level moderate

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check for sensitive files
        run: |
          if [ -f "backend/.env" ]; then
            echo "❌ .env file found in backend - should not be committed"
            exit 1
          fi
          if [ -f "frontend/.env" ]; then
            echo "❌ .env file found in frontend - should not be committed"
            exit 1
          fi
          echo "✅ No sensitive files found"

      - name: Check file structure
        run: |
          if [ ! -f "README.md" ]; then
            echo "❌ README.md not found"
            exit 1
          fi
          if [ ! -f "LICENSE" ]; then
            echo "❌ LICENSE not found"
            exit 1
          fi
          echo "✅ Required files present"
